# workflows/test-pg_bm25.yml
#
# pg_bm25: Unit Tests
# Run unit and packaging tests for the pg_bm25 extension.

name: Testing

on:
  pull_request:
    branches:
      - dev
      - staging
      - main
    paths:
      - "pg_bm25/**"
      - ".github/workflows/test-pg_bm25.yml"
  workflow_dispatch:

concurrency:
  group: test-pg_bm25-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test-pg_bm25:
    name: Test pg_bm25
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v3

      - name: Cache Cargo Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin/
            ~/.rustup/
            pg_bm25/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('pg_bm25/Cargo.lock') }}

      - name: Install All Supported PostgreSQL Versions
        run: |
          # Install the public key for the repository
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

          # Install PostgreSQL 11, 12, 13, 14, and 15
          sudo apt-get update
          sudo apt-get install -y postgresql-11 postgresql-12 postgresql-13 postgresql-14 postgresql-15
          sudo apt-get install -y postgresql-server-dev-11 postgresql-server-dev-12 postgresql-server-dev-13 postgresql-server-dev-14 postgresql-server-dev-15

      - name: Configure PostgreSQL Directories
        run: |
          # Set the required permissions for unit tests to run in GitHub Actions
          sudo chown -R $(whoami) /usr/share/postgresql/11/extension/ /usr/lib/postgresql/11/lib/
          sudo chown -R $(whoami) /usr/share/postgresql/12/extension/ /usr/lib/postgresql/12/lib/
          sudo chown -R $(whoami) /usr/share/postgresql/13/extension/ /usr/lib/postgresql/13/lib/
          sudo chown -R $(whoami) /usr/share/postgresql/14/extension/ /usr/lib/postgresql/14/lib/
          sudo chown -R $(whoami) /usr/share/postgresql/15/extension/ /usr/lib/postgresql/15/lib/

          # Add PostgreSQL binaries to the PATH for regression tests
          echo "/usr/lib/postgresql/11/bin" >> $GITHUB_PATH
          echo "/usr/lib/postgresql/12/bin" >> $GITHUB_PATH
          echo "/usr/lib/postgresql/13/bin" >> $GITHUB_PATH
          echo "/usr/lib/postgresql/14/bin" >> $GITHUB_PATH
          echo "/usr/lib/postgresql/15/bin" >> $GITHUB_PATH

      # Check if cargo-pgrx, grcov, and llvm-tools-preview are in the cache, and install if not
      - name: Install pgrx, grcov & llvm-tools-preview
        working-directory: pg_bm25
        run: |
          if ! command -v cargo-pgrx &> /dev/null; then
            cargo install cargo-pgrx --version 0.9.8
          fi
          if ! command -v grcov &> /dev/null; then
            cargo install grcov
          fi
          if ! rustup component list | grep -q 'llvm-tools-preview.*(installed)'; then
            rustup component add llvm-tools-preview
          fi

      - name: Initialize pgrx
        working-directory: pg_bm25
        run: |
          cargo pgrx init \
            --pg11=/usr/lib/postgresql/11/bin/pg_config \
            --pg12=/usr/lib/postgresql/12/bin/pg_config \
            --pg13=/usr/lib/postgresql/13/bin/pg_config \
            --pg14=/usr/lib/postgresql/14/bin/pg_config \
            --pg15=/usr/lib/postgresql/15/bin/pg_config

      - name: Run pg_bm25 Unit Tests
        working-directory: pg_bm25
        run: |
          # Configure code coverage & run tests
          mkdir -p target/coverage target/coverage-report
          export LLVM_PROFILE_FILE="target/coverage/pg_bm25-%p-%m.profraw"
          export RUST_BACKTRACE=1
          cargo pgrx test

      - name: Run pg_bm25 Regression Tests
        working-directory: pg_bm25
        run: |
          # Install the extension on the runner & run regression tests
          cargo pgrx install
          ./test/runtests.sh

      - name: Generate Code Coverage Report
        working-directory: pg_bm25
        run: grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing -o ./target/coverage-report/

      - name: Upload Coverage Reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./pg_bm25/target/coverage-report/
          files: lcov
          fail_ci_if_error: true
